@model FMS.Models.CAFinancialReportViewModel
@{
    ViewBag.Title = "CA Financial Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>CAFinancialReport</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-4">
                @Html.RadioButtonFor(model => model.IsFinancialPeriod, true) Financial Year
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.SelectedFinancialYearId, new SelectList(Model.FinancialYears, "AcademicYearId", "AcademicYear1"), htmlAttributes: new { @class = "form-control year" })
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-4">
                @Html.RadioButtonFor(model => model.IsFinancialPeriod, false) Select Period
            </div>
            <div class="col-md-4">
                From (DD-MMM-YYYY) @Html.TextBoxFor(model => model.FromDate, htmlAttributes: new { @class = "form-control period datepicker" })
                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                To (DD-MMM-YYYY) @Html.TextBoxFor(model => model.ToDate, htmlAttributes: new { @class = "form-control period datepicker" })
                @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="col-md-4">
                <div class="clearfix padding-top-bottom-20">
                    @Html.RadioButton("rdoDateType", "Y", true) Financial Year
                </div>
            </div>

            <div class="col-md-4">
                <div class="clearfix padding-top-bottom-20">
                    @Html.DropDownListFor(model => model.SelectedFinancialYearId, new SelectList(Model.FinancialYears, "AcademicYearId", "AcademicYear1"), "--select--", htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="clearfix padding-top-bottom-20">

                </div>
            </div>
            <div class="col-md-4">
                <div class="clearfix padding-top-bottom-20">
                    @Html.RadioButton("rdoDateType", "P", true) Select Period
                </div>
            </div>
            <div class="col-md-4">
                From Date
                <div class="clearfix padding-top-bottom-20">
                    @Html.TextBoxFor(model => model.FromDate, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-4">
                To Date
                <div class="clearfix padding-top-bottom-20">
                    @Html.TextBoxFor(model => model.ToDate, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>*@
    </div>

    <div class="padding-top-bottom-20 clearfix">
        <input type="submit" value="Search" class="btn btn-primary pull-left" />


        @*<div class="pull-left padding-left-20">
                @Html.ActionLink("Print Receipt", "Index", null, htmlAttributes: new { target = "_blank", @class = "print-link" })
            </div>*@
    </div>
    <hr />
}
@if (Model.Receipts.Count() > 0)
{
       <a href="#" class="export-ca" style="float:right">Export</a>
}
<table class="table table-striped" id="receipts">
    <thead>
        <tr>
            <th>
                Receipt No
            </th>
            <th>
                Student
            </th>
            <th>
                Amount
            </th>
            <th>
                Payment Mode
            </th>
            <th class="no-sort">
                Date
            </th>
        </tr>
    </thead>
    @foreach (var item in Model.Receipts)
    {
        <tr>
            <td>
                @item.ReceiptName
            </td>
            <td>
                @item.StudentPayments.Select(x => x.Student.StudentFirstName + " " + x.Student.StudentLastName).FirstOrDefault()
            </td>
            <td>
                @item.Amount
            </td>
            <td>
                @item.PaymentMode.PaymentMode1
            </td>
            <td>
                @Convert.ToString(string.Format("{0:dd-MMM-yyyy}", item.CreatedDate))
            </td>
        </tr>
    }

</table>

@section Scripts{
 <script src="~/Scripts/Highcharts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript">
        $('form input').on('change', function () {
            dateTypeChange();
        });
        $(document).ready(function () {
            $('#receipts').dataTable({
                "pageLength": 5,
                //"ordering": false,
                "searching": false,
                "lengthChange": false,
                "columnDefs": [{
                    "targets": 'no-sort',
                    "orderable": false,
                }]

            });
            dateTypeChange();


            //$("#btnExport").click(function (e) {
            //    e.preventDefault();

            //    //getting data from our table
            //    var data_type = 'data:application/vnd.ms-excel';
            //    var table_div = document.getElementById('receipts');
            //    var table_html = table_div.outerHTML.replace(/ /g, '%20');

            //    var a = document.createElement('a');
            //    a.href = data_type + ', ' + table_html;
            //    a.download = 'exported_table_' + Math.floor((Math.random() * 9999999) + 1000000) + '.xls';
            //    a.click();
            //});
            $('.datepicker').datepicker({
                format: 'dd-M-yyyy',
            });

        });

        function dateTypeChange() {
            //alert($('input[name=IsFinancialPeriod]:checked').val());
            if ($('input[name=IsFinancialPeriod]:checked').val() == "True") {
                $(".period").prop('disabled', true);
                $(".year").prop('disabled', false);

            }
            else  {
                $(".year").prop('disabled', true);
                $(".period").prop('disabled', false);
            }
        }
        $(document).ready(function () {

            $('.export-ca').click(function (event) {
                event.preventDefault();
                $.ajax({
                    url: 'CAFinancialReport',
                    //dataType: "json",
                    type: "POST",
                    data: $('form').serialize(),
                    //contentType: 'application/json; charset=utf-8',
                    //async: false,
                    //processData: false,
                    //cache: false,
                    //delay: 15,
                    success: function (data) {
                       window.location.href = "@Url.Content("~/Report/ExportCAFinancialReport")";

                    },
                    error: function (xhr) {
                        alert('error');
                    }
                });
            });

        });
    </script>
}